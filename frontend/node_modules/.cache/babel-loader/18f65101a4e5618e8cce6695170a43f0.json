{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lukey\\\\Desktop\\\\GIO 2.0\\\\frontend\\\\src\\\\components\\\\modal\\\\ModalForm.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport Calendar from \"react-calendar\";\nconst POST_ADDRESS = \"http://localhost:5000/orders/create\";\n\nconst ModalForm = () => {\n  //States\n  const [date, setDate] = useState(new Date()); // Functions\n\n  const onChangeDate = date => {\n    setDate(date);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault(event);\n    const orderSubmission = {\n      title: event.target.title.value,\n      description: event.target.desc.value,\n      quantity: event.target.quantity.value,\n      deadline: date.toISOString()\n    };\n    Axios.post(POST_ADDRESS, orderSubmission).then(function (response) {\n      console.log(\"Order created!\");\n      console.log(response.data);\n    }).catch(function (error) {\n      if (error.response) {\n        // Request made and server responded\n        console.log(\"Response Error\");\n        console.log(error.response.data.error.message);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(\"No Response Error!\");\n        console.log(error.request);\n      } else {\n        console.log(\"Request Creation Error!\");\n        console.log(\"Error\", error.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ModalForm;","map":{"version":3,"sources":["C:/Users/Lukey/Desktop/GIO 2.0/frontend/src/components/modal/ModalForm.js"],"names":["React","useState","Axios","Calendar","POST_ADDRESS","ModalForm","date","setDate","Date","onChangeDate","onSubmit","event","preventDefault","orderSubmission","title","target","value","description","desc","quantity","deadline","toISOString","post","then","response","console","log","data","catch","error","message","request"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,YAAY,GAAG,qCAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CAAhC,CAFsB,CAItB;;AACA,QAAMC,YAAY,GAAIH,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN,CAAqBD,KAArB;AAEA,UAAME,eAAe,GAAG;AACtBC,MAAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAaD,KAAb,CAAmBE,KADJ;AAEtBC,MAAAA,WAAW,EAAEN,KAAK,CAACI,MAAN,CAAaG,IAAb,CAAkBF,KAFT;AAGtBG,MAAAA,QAAQ,EAAER,KAAK,CAACI,MAAN,CAAaI,QAAb,CAAsBH,KAHV;AAItBI,MAAAA,QAAQ,EAAEd,IAAI,CAACe,WAAL;AAJY,KAAxB;AAOAnB,IAAAA,KAAK,CAACoB,IAAN,CAAWlB,YAAX,EAAyBS,eAAzB,EACGU,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,KAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtB,UAAIA,KAAK,CAACL,QAAV,EAAoB;AAClB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACL,QAAN,CAAeG,IAAf,CAAoBE,KAApB,CAA0BC,OAAtC;AACD,OAJD,MAIO,IAAID,KAAK,CAACE,OAAV,EAAmB;AACxB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,OAAlB;AACD,OAJM,MAIA;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAAK,CAACC,OAA3B;AACD;AACF,KAlBH;AAmBD,GA7BD;;AA+BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA7CD;;AA+CA,eAAezB,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nconst POST_ADDRESS = \"http://localhost:5000/orders/create\";\r\n\r\nconst ModalForm = () => {\r\n  //States\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  // Functions\r\n  const onChangeDate = (date) => {\r\n    setDate(date);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault(event);\r\n\r\n    const orderSubmission = {\r\n      title: event.target.title.value,\r\n      description: event.target.desc.value,\r\n      quantity: event.target.quantity.value,\r\n      deadline: date.toISOString(),\r\n    };\r\n\r\n    Axios.post(POST_ADDRESS, orderSubmission)\r\n      .then(function (response) {\r\n        console.log(\"Order created!\");\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          // Request made and server responded\r\n          console.log(\"Response Error\");\r\n          console.log(error.response.data.error.message);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          console.log(\"No Response Error!\");\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Request Creation Error!\");\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form action=\"\"></form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n"]},"metadata":{},"sourceType":"module"}