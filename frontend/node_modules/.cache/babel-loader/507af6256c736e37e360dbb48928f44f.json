{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lukey\\\\Desktop\\\\Inventory-Management-master\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Axios from \"axios\"; // Import Modal Components\n\nimport PostModal from \"./components/post/PostModal\"; // Import Order Componenets\n\nimport OrderList from \"./components/order/OrderList\";\nimport NavBar from \"./components/navbar/NavBar\";\nconst ORDER_ADDRESS = \"http://localhost:5000/orders/\";\n\nfunction App() {\n  // States\n  const [modalOpen, setModalOpen] = useState(false);\n  const [polling, setPolling] = useState(false);\n  const [isDescending, setIsDescending] = useState(true); // Order Display\n\n  const [filter, setFilter] = useState(\"all\");\n  const [displayOrders, setDisplayOrders] = useState([]); // Effects\n\n  useEffect(() => {\n    const chooseDisplay = () => {\n      Axios.get(ORDER_ADDRESS + filter).then(response => {\n        setDisplayOrders(response.data);\n      });\n    };\n\n    chooseDisplay();\n    console.log(displayOrders);\n  }, [filter, polling, isDescending]); // Functions\n\n  const compareDateDesc = (a, b) => {\n    if (a.date < b.date) return 1;\n    if (a.date > b.date) return -1;\n    return 0;\n  };\n\n  const compareDateAsc = (a, b) => {\n    if (a.date > b.date) return 1;\n    if (a.date < b.date) return -1;\n    return 0;\n  };\n\n  const filterLazer = () => {\n    let lazerDone = displayOrders.filter(function (order) {\n      return order.todo.lazer === true;\n    });\n    setDisplayOrders(lazerDone);\n  }; // const printDisplayArray = () => {\n  //   console.log(displayOrders);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: filterLazer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"PRINT ME\"), /*#__PURE__*/React.createElement(PostModal, {\n    polling: polling,\n    setPolling: setPolling,\n    setModalOpen: setModalOpen,\n    modalOpen: modalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    setModalOpen: setModalOpen,\n    setFilter: setFilter,\n    isDescending: isDescending,\n    setIsDescending: setIsDescending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OrderList, {\n    polling: polling,\n    setPolling: setPolling,\n    displayOrders: isDescending ? displayOrders.sort(compareDateDesc) : displayOrders.sort(compareDateAsc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lukey/Desktop/Inventory-Management-master/frontend/src/App.js"],"names":["React","useState","useEffect","Axios","PostModal","OrderList","NavBar","ORDER_ADDRESS","App","modalOpen","setModalOpen","polling","setPolling","isDescending","setIsDescending","filter","setFilter","displayOrders","setDisplayOrders","chooseDisplay","get","then","response","data","console","log","compareDateDesc","a","b","date","compareDateAsc","filterLazer","lazerDone","order","todo","lazer","sort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from \"axios\";\n\n// Import Modal Components\nimport PostModal from \"./components/post/PostModal\";\n\n// Import Order Componenets\nimport OrderList from \"./components/order/OrderList\";\nimport NavBar from \"./components/navbar/NavBar\";\n\nconst ORDER_ADDRESS = \"http://localhost:5000/orders/\";\n\nfunction App() {\n  // States\n  const [modalOpen, setModalOpen] = useState(false);\n  const [polling, setPolling] = useState(false);\n  const [isDescending, setIsDescending] = useState(true);\n\n  // Order Display\n  const [filter, setFilter] = useState(\"all\");\n  const [displayOrders, setDisplayOrders] = useState([]);\n\n  // Effects\n  useEffect(() => {\n    const chooseDisplay = () => {\n      Axios.get(ORDER_ADDRESS + filter).then((response) => {\n        setDisplayOrders(response.data);\n      });\n    };\n    chooseDisplay();\n    console.log(displayOrders);\n  }, [filter, polling, isDescending]);\n\n  // Functions\n  const compareDateDesc = (a, b) => {\n    if (a.date < b.date) return 1;\n    if (a.date > b.date) return -1;\n    return 0;\n  };\n\n  const compareDateAsc = (a, b) => {\n    if (a.date > b.date) return 1;\n    if (a.date < b.date) return -1;\n    return 0;\n  };\n\n  const filterLazer = () => {\n    let lazerDone = displayOrders.filter(function (order) {\n      return order.todo.lazer === true;\n    });\n    setDisplayOrders(lazerDone);\n  };\n\n  // const printDisplayArray = () => {\n  //   console.log(displayOrders);\n  // };\n\n  return (\n    <div className=\"App\">\n      <button onClick={filterLazer}>PRINT ME</button>\n      <PostModal\n        polling={polling}\n        setPolling={setPolling}\n        setModalOpen={setModalOpen}\n        modalOpen={modalOpen}\n      />\n      <NavBar\n        setModalOpen={setModalOpen}\n        setFilter={setFilter}\n        isDescending={isDescending}\n        setIsDescending={setIsDescending}\n      />\n      <OrderList\n        polling={polling}\n        setPolling={setPolling}\n        displayOrders={\n          isDescending\n            ? displayOrders.sort(compareDateDesc)\n            : displayOrders.sort(compareDateAsc)\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}