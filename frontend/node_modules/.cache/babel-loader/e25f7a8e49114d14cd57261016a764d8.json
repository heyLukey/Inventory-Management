{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lukey\\\\Desktop\\\\Inventory-Management-master\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Axios from \"axios\"; // Import Modal Components\n\nimport PostModal from \"./components/post/PostModal\"; // Import Order Componenets\n\nimport OrderList from \"./components/order/OrderList\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport Download from \"./components/Download\";\nimport FilterContainer from \"./components/filter/FilterContainer\";\nconst ORDER_ADDRESS = \"http://localhost:5000/orders/\";\n\nfunction App() {\n  _s();\n\n  // States\n  const [modalOpen, setModalOpen] = useState(false);\n  const [polling, setPolling] = useState(false);\n  const [isDescending, setIsDescending] = useState(true);\n  const [conditions, setConditions] = useState({\n    polishing: false,\n    sizing: false,\n    lazer: false,\n    engraving: false,\n    plating: false,\n    rhodium: false,\n    cleaning: false\n  }); // Order Display\n\n  const [filter, setFilter] = useState(\"all\");\n  const [displayOrders, setDisplayOrders] = useState([]); // Effects\n\n  useEffect(() => {\n    const chooseDisplay = () => {\n      Axios.get(ORDER_ADDRESS + filter).then(response => {\n        setDisplayOrders(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    chooseDisplay();\n  }, [filter, polling, isDescending]); // Functions\n\n  const compareDateDesc = (a, b) => {\n    if (a.date < b.date) return 1;\n    if (a.date > b.date) return -1;\n    return 0;\n  };\n\n  const compareDateAsc = (a, b) => {\n    if (a.date > b.date) return 1;\n    if (a.date < b.date) return -1;\n    return 0;\n  };\n\n  const godFilter = arr => {\n    let arrFiltered = displayOrders;\n    let inAction = 0;\n    Object.entries(arr).forEach(element => {\n      if (element[1] === true) {\n        arrFiltered = arrFiltered.filter(function (order) {\n          return order.todo[element[0]] === true;\n        });\n        inAction++;\n      }\n    });\n    console.log(arrFiltered);\n  }; // TURN INTO CHECKBOX, USEEFFECT TO REAPPLY IF ACTIVE ON ANY POLLING\n\n\n  const filterLazer = () => {\n    let lazerDone = displayOrders.filter(function (order) {\n      return order.todo.lazer === true;\n    });\n    setDisplayOrders(lazerDone);\n  };\n\n  const printDisplayArray = () => {\n    console.log(displayOrders);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function () {\n      godFilter(conditions);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"GOD FILTER\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: filterLazer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"FILTER LAZER\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: printDisplayArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"PRINT DISPLAY ARRAY\"), /*#__PURE__*/React.createElement(Download, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterContainer, {\n    displayOrders: displayOrders,\n    setDisplayOrders: setDisplayOrders,\n    setPolling: setPolling,\n    polling: polling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PostModal, {\n    polling: polling,\n    setPolling: setPolling,\n    setModalOpen: setModalOpen,\n    modalOpen: modalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    setModalOpen: setModalOpen,\n    setFilter: setFilter,\n    isDescending: isDescending,\n    setIsDescending: setIsDescending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OrderList, {\n    polling: polling,\n    setPolling: setPolling,\n    displayOrders: isDescending ? displayOrders.sort(compareDateDesc) : displayOrders.sort(compareDateAsc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(App, \"rx5AOMnlt1NUcDCyCI7CKMAZMWU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Lukey/Desktop/Inventory-Management-master/frontend/src/App.js"],"names":["React","useState","useEffect","Axios","PostModal","OrderList","NavBar","Download","FilterContainer","ORDER_ADDRESS","App","modalOpen","setModalOpen","polling","setPolling","isDescending","setIsDescending","conditions","setConditions","polishing","sizing","lazer","engraving","plating","rhodium","cleaning","filter","setFilter","displayOrders","setDisplayOrders","chooseDisplay","get","then","response","data","catch","error","console","log","compareDateDesc","a","b","date","compareDateAsc","godFilter","arr","arrFiltered","inAction","Object","entries","forEach","element","order","todo","filterLazer","lazerDone","printDisplayArray","sort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from \"axios\";\n\n// Import Modal Components\nimport PostModal from \"./components/post/PostModal\";\n\n// Import Order Componenets\nimport OrderList from \"./components/order/OrderList\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport Download from \"./components/Download\";\nimport FilterContainer from \"./components/filter/FilterContainer\";\n\nconst ORDER_ADDRESS = \"http://localhost:5000/orders/\";\n\nfunction App() {\n  // States\n  const [modalOpen, setModalOpen] = useState(false);\n  const [polling, setPolling] = useState(false);\n  const [isDescending, setIsDescending] = useState(true);\n  const [conditions, setConditions] = useState({\n    polishing: false,\n    sizing: false,\n    lazer: false,\n    engraving: false,\n    plating: false,\n    rhodium: false,\n    cleaning: false,\n  });\n\n  // Order Display\n  const [filter, setFilter] = useState(\"all\");\n  const [displayOrders, setDisplayOrders] = useState([]);\n\n  // Effects\n  useEffect(() => {\n    const chooseDisplay = () => {\n      Axios.get(ORDER_ADDRESS + filter)\n        .then((response) => {\n          setDisplayOrders(response.data);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    };\n    chooseDisplay();\n  }, [filter, polling, isDescending]);\n\n  // Functions\n\n  const compareDateDesc = (a, b) => {\n    if (a.date < b.date) return 1;\n    if (a.date > b.date) return -1;\n    return 0;\n  };\n\n  const compareDateAsc = (a, b) => {\n    if (a.date > b.date) return 1;\n    if (a.date < b.date) return -1;\n    return 0;\n  };\n\n  const godFilter = (arr) => {\n    let arrFiltered = displayOrders;\n    let inAction = 0;\n    Object.entries(arr).forEach((element) => {\n      if (element[1] === true) {\n        arrFiltered = arrFiltered.filter(function (order) {\n          return order.todo[element[0]] === true;\n        });\n        inAction++;\n      }\n    });\n\n    console.log(arrFiltered);\n  };\n\n  // TURN INTO CHECKBOX, USEEFFECT TO REAPPLY IF ACTIVE ON ANY POLLING\n  const filterLazer = () => {\n    let lazerDone = displayOrders.filter(function (order) {\n      return order.todo.lazer === true;\n    });\n    setDisplayOrders(lazerDone);\n  };\n\n  const printDisplayArray = () => {\n    console.log(displayOrders);\n  };\n\n  return (\n    <div className=\"App\">\n      <button\n        onClick={function () {\n          godFilter(conditions);\n        }}\n      >\n        GOD FILTER\n      </button>\n      <button onClick={filterLazer}>FILTER LAZER</button>\n      <button onClick={printDisplayArray}>PRINT DISPLAY ARRAY</button>\n      <Download />\n      <FilterContainer\n        displayOrders={displayOrders}\n        setDisplayOrders={setDisplayOrders}\n        setPolling={setPolling}\n        polling={polling}\n      />\n      <PostModal\n        polling={polling}\n        setPolling={setPolling}\n        setModalOpen={setModalOpen}\n        modalOpen={modalOpen}\n      />\n      <NavBar\n        setModalOpen={setModalOpen}\n        setFilter={setFilter}\n        isDescending={isDescending}\n        setIsDescending={setIsDescending}\n      />\n      <OrderList\n        polling={polling}\n        setPolling={setPolling}\n        displayOrders={\n          isDescending\n            ? displayOrders.sort(compareDateDesc)\n            : displayOrders.sort(compareDateAsc)\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}